/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.75
 * Generated at: 2018-03-10 18:32:08 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.admin.templates;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class header_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<style type=\"text/css\">\n");
      out.write("\n");
      out.write("    /* Sticky footer styles\n");
      out.write("    -------------------------------------------------- */\n");
      out.write("\n");
      out.write("    html,\n");
      out.write("    body {\n");
      out.write("        height: 100%;\n");
      out.write("        /* The html and body elements cannot have any padding or margin. */\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    /* Wrapper for page content to push down footer */\n");
      out.write("    #wrap {\n");
      out.write("        min-height: 100%;\n");
      out.write("        height: auto !important;\n");
      out.write("        height: 100%;\n");
      out.write("        /* Negative indent footer by it's height */\n");
      out.write("        margin: 0 auto -60px;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    /* Set the fixed height of the footer here */\n");
      out.write("    #push,\n");
      out.write("    #footer {\n");
      out.write("        height: 60px;\n");
      out.write("    }\n");
      out.write("    #footer {\n");
      out.write("        background-color: #f5f5f5;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    /* Lastly, apply responsive CSS fixes as necessary */\n");
      out.write("    @media (max-width: 767px) {\n");
      out.write("        #footer {\n");
      out.write("            margin-left: -20px;\n");
      out.write("            margin-right: -20px;\n");
      out.write("            padding-left: 20px;\n");
      out.write("            padding-right: 20px;\n");
      out.write("        }\n");
      out.write("    }\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("    /* Custom page CSS\n");
      out.write("    -------------------------------------------------- */\n");
      out.write("    /* Not required for template or sticky footer method. */\n");
      out.write("\n");
      out.write("    #wrap > .container {\n");
      out.write("        padding-top: 60px;\n");
      out.write("    }\n");
      out.write("    .container .credit {\n");
      out.write("        margin: 20px 0;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    code {\n");
      out.write("        font-size: 80%;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    .cabecera{\n");
      out.write("        position: fixed;\n");
      out.write("        top: 0px;\n");
      out.write("        z-index: 1038;\n");
      out.write("        width: 100%;\n");
      out.write("        height: 30px;\n");
      out.write("        background: #fff;\n");
      out.write("        text-align: center;\n");
      out.write("        padding-top: 5px;\n");
      out.write("\n");
      out.write("    }\n");
      out.write("    .cabecera a{\n");
      out.write("     \n");
      out.write("        font-size: 20px;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("</style>\n");
      out.write("<!-- Fixed navbar -->\n");
      out.write("   <a href=\"../index.jsp\" class=\"button_mapa btn btn-primary\">Ver Mapa de Incidentes</a>\n");
      out.write("   \n");
      out.write("<div class=\"cabecera\"> \n");
      out.write(" \n");
      out.write("    \n");
      out.write("    <a class=\"brand\" href=\"#\">Registre incidencia delincuenciales en Ayacucho</a> \n");
      out.write("    \n");
      out.write("</div>\n");
      out.write("\n");
      out.write("<div class=\"navbar navbar-fixed-top\">\n");
      out.write("    <div class=\"navbar-inner\">\n");
      out.write("        <div class=\"container\">\n");
      out.write("            <button type=\"button\" class=\"btn btn-navbar\" data-toggle=\"collapse\" data-target=\".nav-collapse\">\n");
      out.write("                <span class=\"icon-bar\"></span>\n");
      out.write("                <span class=\"icon-bar\"></span>\n");
      out.write("                <span class=\"icon-bar\"></span>\n");
      out.write("            </button>           \n");
      out.write("            <div class=\"nav-collapse collapse\">\n");
      out.write("                <ul class=\"nav\">\n");
      out.write("                    <li>\n");
      out.write("                        <a  href=\"registrar.jsp\">Registrar Incidentes</a>\n");
      out.write("                    </li>\n");
      out.write("                    ");

                        String rol = (String) request.getSession().getAttribute("rolusuario");

                        if (rol.equals("RA")) {
                    
      out.write("\n");
      out.write("                    <li>\n");
      out.write("                        <a href=\"puntos_critico.jsp\"  >Puntos cr√≠ticos</a>\n");
      out.write("                    </li>\n");
      out.write("                    <li>\n");
      out.write("                        <a href=\"puntos_vigilancia.jsp\"   >Puntos de vigilancia</a>\n");
      out.write("                    </li>\n");
      out.write("                    <li>\n");
      out.write("                        <a href=\"admin_incidentes.jsp\"   >Administrar incidentes</a>\n");
      out.write("                    </li>\n");
      out.write("                    ");
}
      out.write("\n");
      out.write("\n");
      out.write("                </ul>\n");
      out.write("\n");
      out.write("                <div  class=\"nav pull-right\" >\n");
      out.write("                    <p style=\"color: #000\"> Bienvenido :<spam>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${usuario}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("</spam> </p>\n");
      out.write("                    <a class=\"cerrar_sesion\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/SCerrarsesion_users\">Cerrar Sesion</a>\n");
      out.write("                </div>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("    </div>\n");
      out.write("</div>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
