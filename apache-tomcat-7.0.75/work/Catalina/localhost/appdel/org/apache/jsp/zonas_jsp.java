/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.75
 * Generated at: 2018-03-10 18:53:31 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class zonas_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("    <head>\n");
      out.write("        <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n");
      out.write("        <title>Zonas de Incidentes</title>\n");
      out.write("\n");
      out.write("        <link rel=\"stylesheet\" href=\"lib/leaflet.css\" />\n");
      out.write("        ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "plantillas/styles.jspf", out, false);
      out.write("\n");
      out.write("            <style>\n");
      out.write("                #map {\n");
      out.write("                    width: 100%;\n");
      out.write("                    height: 550px;\n");
      out.write("                    margin-top: 95px;\n");
      out.write("                    background-color: #2D2A2A;\n");
      out.write("                }\n");
      out.write("                .info {\n");
      out.write("                    padding: 6px 8px;\n");
      out.write("                    font: 14px/16px Arial, Helvetica, sans-serif;\n");
      out.write("                    background: white;\n");
      out.write("                    background: rgba(255,255,255,0.8);\n");
      out.write("                    box-shadow: 0 0 15px rgba(0,0,0,0.2);\n");
      out.write("                    border-radius: 5px;\n");
      out.write("                }\n");
      out.write("                .info h4 {\n");
      out.write("                    margin: 0 0 5px;\n");
      out.write("                    color: #777;\n");
      out.write("                }\n");
      out.write("\n");
      out.write("                .legend {\n");
      out.write("                    text-align: left;\n");
      out.write("                    line-height: 18px;\n");
      out.write("                    color: #555;\n");
      out.write("                }\n");
      out.write("                .legend i {\n");
      out.write("                    width: 18px;\n");
      out.write("                    height: 18px;\n");
      out.write("                    float: left;\n");
      out.write("                    margin-right: 8px;\n");
      out.write("                    opacity: 0.7;\n");
      out.write("                }\n");
      out.write("\n");
      out.write("            </style>\n");
      out.write("\n");
      out.write("\n");
      out.write("        </head>\n");
      out.write("        <body>\n");
      out.write("\n");
      out.write("        ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "plantillas/header.jspf", out, false);
      out.write("\n");
      out.write("        <div id=\"map\"></div>\n");
      out.write("        <div class=\"footer\">\n");
      out.write("        </div>\n");
      out.write("        <script src=\"js/mapa.js\"></script>\n");
      out.write("        <script src=\"lib/leaflet.js\"></script>\n");
      out.write("        <script src=\"lib/underscore-min.js\"></script>   \n");
      out.write("        <script type=\"text/javascript\" src=\"js/grid_ayac.js\"></script>\n");
      out.write("        <script type=\"text/javascript\" src=\"http://localhost:8080/appdel/SObtener_densidad\"></script>\n");
      out.write("\n");
      out.write("        <script type=\"text/javascript\">\n");
      out.write("            _.each(grid_ayac.features, function(value, key) {\n");
      out.write("                var gid = grid_ayac.features[key].properties.gid - 1;\n");
      out.write("                grid_ayac.features[key].properties[\"cant\"] = cantidad[gid].cantidad;\n");
      out.write("            });\n");
      out.write("\n");
      out.write("            console.log(grid_ayac.features);\n");
      out.write("\n");
      out.write("\n");
      out.write("            var map = L.map('map').setView([-13.1548, -74.2044], 15);\n");
      out.write("            map.options.maxZoom = 19;\n");
      out.write("            map.options.minZoom = 14;\n");
      out.write("\n");
      out.write("            L.tileLayer('http://{s}.tiles.mapbox.com/v3/' + ruben + 'seguridadciudadana/{z}/{x}/{y}.png').addTo(map);\n");
      out.write("            //  L.geoJson(statesData).addTo(map);\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("            // control that shows state info on hover\n");
      out.write("            var info = L.control();\n");
      out.write("\n");
      out.write("            info.onAdd = function(map) {\n");
      out.write("                this._div = L.DomUtil.create('div', 'info');\n");
      out.write("                this.update();\n");
      out.write("                return this._div;\n");
      out.write("            };\n");
      out.write("\n");
      out.write("            info.update = function(props) {\n");
      out.write("                this._div.innerHTML = '<h4>Incidentes por zonas</h4>' + (props ?\n");
      out.write("                        props.cant + ' Incidentes'\n");
      out.write("                        : 'Indique una zona');\n");
      out.write("            };\n");
      out.write("\n");
      out.write("            info.addTo(map);\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("            function getColor(d) {\n");
      out.write("                return d > 100 ? '#800026' :\n");
      out.write("                        d > 50 ? '#BD0026' :\n");
      out.write("                        d > 20 ? '#E31A1C' :\n");
      out.write("                        d > 10 ? '#FC4E2A' :\n");
      out.write("                        d > 5 ? '#FD8D3C' :\n");
      out.write("                        d > 2 ? '#FEB24C' :\n");
      out.write("                        d >= 1 ? '#FED976' :\n");
      out.write("                        '#ffffff';\n");
      out.write("            }\n");
      out.write("\n");
      out.write("\n");
      out.write("            function style(feature) {\n");
      out.write("                return {\n");
      out.write("                    fillColor: getColor(feature.properties.cant),\n");
      out.write("                    weight: 0.5,\n");
      out.write("                    opacity: 1,\n");
      out.write("                    color: 'white',\n");
      out.write("                    dashArray: '3',\n");
      out.write("                    fillOpacity: 0.3\n");
      out.write("                };\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            L.geoJson(grid_ayac, {style: style}).addTo(map);\n");
      out.write("\n");
      out.write("\n");
      out.write("            function highlightFeature(e) {\n");
      out.write("                var layer = e.target;\n");
      out.write("\n");
      out.write("                layer.setStyle({\n");
      out.write("                    weight: 5,\n");
      out.write("                    color: '#666',\n");
      out.write("                    dashArray: '',\n");
      out.write("                    fillOpacity: 0.7\n");
      out.write("                });\n");
      out.write("\n");
      out.write("                if (!L.Browser.ie && !L.Browser.opera) {\n");
      out.write("                    layer.bringToFront();\n");
      out.write("                }\n");
      out.write("\n");
      out.write("                info.update(layer.feature.properties);\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            var geojson;\n");
      out.write("\n");
      out.write("            function resetHighlight(e) {\n");
      out.write("                geojson.resetStyle(e.target);\n");
      out.write("                info.update();\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            function zoomToFeature(e) {\n");
      out.write("                map.fitBounds(e.target.getBounds());\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            function onEachFeature(feature, layer) {\n");
      out.write("                layer.on({\n");
      out.write("                    mouseover: highlightFeature,\n");
      out.write("                    mouseout: resetHighlight,\n");
      out.write("                    click: zoomToFeature\n");
      out.write("                });\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            geojson = L.geoJson(grid_ayac, {\n");
      out.write("                style: style,\n");
      out.write("                onEachFeature: onEachFeature\n");
      out.write("            }).addTo(map);\n");
      out.write("\n");
      out.write("            map.attributionControl.addAttribution('Population data &copy; <a href=\"http://census.gov/\">US Census Bureau</a>');\n");
      out.write("\n");
      out.write("\n");
      out.write("            var legend = L.control({position: 'bottomright'});\n");
      out.write("\n");
      out.write("            legend.onAdd = function(map) {\n");
      out.write("\n");
      out.write("                var div = L.DomUtil.create('div', 'info legend'),\n");
      out.write("                        grades = [0, 1, 2, 5, 10, 20, 50, 100],\n");
      out.write("                        labels = [],\n");
      out.write("                        from, to;\n");
      out.write("\n");
      out.write("                for (var i = 0; i < grades.length; i++) {\n");
      out.write("                    from = grades[i];\n");
      out.write("                    to = grades[i + 1];\n");
      out.write("\n");
      out.write("                    labels.push(\n");
      out.write("                            '<i style=\"background:' + getColor(from + 1) + '\"></i> ' +\n");
      out.write("                            from + (to ? '&ndash;' + to : '+'));\n");
      out.write("                }\n");
      out.write("\n");
      out.write("                div.innerHTML = labels.join('<br>');\n");
      out.write("                return div;\n");
      out.write("            };\n");
      out.write("\n");
      out.write("            legend.addTo(map);\n");
      out.write("\n");
      out.write("        </script>\n");
      out.write("\n");
      out.write("    </body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
